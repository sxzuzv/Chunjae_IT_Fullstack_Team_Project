<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">
<!-- 리절트 맵 정의 -->	
<!--	<resultMap id="memberResult" type="MemberVO">-->
<!--		<result property="memberId" column="member_id" />-->
<!--		<result property="memberPw" column="member_pw" />-->
<!--		<result property="memberName" column="member_name" />-->
<!--		<result property="memberGender" column="member_gender" />-->

<!--		<result property="memberBirthY" column="member_birth_y" />-->
<!--		<result property="memberBirthM" column="member_birth_m" />-->
<!--		<result property="memberBirthD" column="member_birth_d" />-->

<!--		<result property="memberBirthGn" column="member_birth_gn" />-->
<!--		<result property="tel1" column="tel1" />-->
<!--		<result property="tel2" column="tel2" />-->
<!--		<result property="tel3" column="tel3" />-->

<!--		<result property="hp1" column="hp1" />-->
<!--		<result property="hp2" column="hp2" />-->
<!--		<result property="hp3" column="hp3" />-->
<!--		<result property="smsstsYn" column="smssts_yn" />-->
<!--		<result property="email1" column="email1" />-->
<!--		<result property="email2" column="email2" />-->
<!--		<result property="emailstsYn" column="emailsts_yn" />-->

<!--		<result property="zipcode" column="zipcode" />-->
<!--		<result property="roadAddress" column="roadAddress" />-->
<!--		<result property="jibunAddress" column="jibunAddress" />-->
<!--		<result property="namujiAddress" column="namujiAddress" />-->
<!--		<result property="joinDate" column="joinDate" />-->
<!--	</resultMap>-->

	<select id="login" resultType="memberVO"  parameterType="java.util.Map"  >
	    <![CDATA[
			select * from t_shopping_member 
			 where member_id=#{memberId}
			 and member_pw=#{memberPw}
			 
		]]>
	</select>
	
	<select id="selectOverlappedID" parameterType="String" resultType="String">
	   select case
	       when count(*) = 1 then 'true'
			else 'false'
	   		end

	   from t_shopping_member
	   where member_id = #{memberId}
	</select>
	
  <insert id="insertNewMember"  parameterType="memberVO">
  <![CDATA[
    	insert into t_shopping_member(member_id, member_pw, member_name, member_gender, member_birth_y, member_birth_m, member_birth_d, member_birth_gn,
member_hp1, member_hp2, member_hp3, smssts_yn, member_email1, member_email2, emailsts_yn, zipcode, road_address, jibun_address, namuji_address)
	 values(#{memberId}, #{memberPw}, #{memberName}, #{memberGender}, #{memberBirthY}, #{memberBirthM}, #{memberBirthD}, #{memberBirthGn}, #{memberHp1},
#{memberHp2}, #{memberHp3}, #{smsstsYn}, #{memberEmail1}, #{memberEmail2}, #{emailstsYn}, #{zipcode}, #{roadAddress}, #{jibunAddress}, #{namujiAddress})

                                      
   ]]>      
  </insert>

	<select id="authMember" parameterType="java.util.Map" resultType="memberVO">
		select * from t_shopping_member
		where
			member_email1=#{memberEmail1}
			and member_email2=#{memberEmail2}
			and member_name=#{memberName}
			and member_id=#{memberId}
	</select>

	<update id="pwChange" parameterType="memberVO">
		update t_shopping_member
		set member_pw=#{memberPw}
		where member_id=#{memberId}
	</update>

	<select id="authId" parameterType="java.util.Map" resultType="memberVO">
		select * from t_shopping_member
		where
			member_name=#{memberName}
			and member_hp1=#{memberHp1}
			and member_hp2=#{memberHp2}
			and member_hp3=#{memberHp3}

	</select>

	<insert id="insertAuth"  parameterType="string">
  <![CDATA[
		insert into member_auth(member_id, auth)
		values(#{memberId}, 'ROLE_MEMBER')
		]]>
  </insert>

</mapper>